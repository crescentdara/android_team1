plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'bitc.full502'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.opencsv:opencsv:5.9'
<<<<<<< HEAD

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	runtimeOnly 'com.h2database:h2'                                          // ✅ H2(로컬 테스트용)

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // ✅ JPA(안에 JDBC 포함)

	implementation 'mysql:mysql-connector-java:8.0.33'
=======
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
>>>>>>> testmerge/LodgingMerge
}

tasks.named('test') {
	useJUnitPlatform()
}
